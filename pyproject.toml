[project]
name = "python-chat"
version = "0.1.0"
description = ""
readme = "README.md"
requires-python = ">=3.13, <4"
dependencies = [
    "python-engineio (>=4.9.1)",
    "python-socketio (>=5.11.4)",
    "simple-websocket (>=1.0.0)",
    "werkzeug (>=3.0.4)",
    "wsproto (>=1.2.0)",
    "flask-sqlalchemy (>=3.1.0)",
    "flask-login (>=0.6.3)",
    "psycopg2-binary (>=2.9.9)",
    "flask-wtf (>=1.2.1)",
    "bidict (>=0.23.1)",
    "blinker (>=1.8.2)",
    "click (>=8.1.7)",
    "colorama (>=0.4.6)",
    "dnspython (>=2.6.1)",
    "eventlet (>=0.37.0)",
    "flask (>=3.0.3)",
    "flask-socketio (>=5.3.7)",
    "greenlet (>=3.1.0)",
    "gunicorn (>=23.0.0)",
    "h11 (>=0.14.0)",
    "itsdangerous (>=2.2.0)",
    "jinja2 (>=3.1.4)",
    "markupsafe (>=2.1.5)",
    "packaging (>=24.1)",
    "pydantic (>=2.0.0)",
    "pydantic-core (>=2.0.0)",
    "sqlalchemy2-stubs (>=0.0.2a38,<0.0.3)",
]

[tool.poetry]
package-mode = false


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
plugins = "pydantic.mypy"

follow_untyped_imports = true
exclude = "postgres-data"


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "./postgres-data",
]

line-length = 120
indent-width = 4
target-version = "py313"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # Unused imports
    "F401",
    # Imported but unused
    "F403",
    # Unused variables
    "F841",
]
ignore = ["SIM108"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


